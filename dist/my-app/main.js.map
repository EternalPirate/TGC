{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chart/chart-buttons/chart-buttons.component.html","webpack:///./src/app/chart/chart-buttons/chart-buttons.component.scss","webpack:///./src/app/chart/chart-buttons/chart-buttons.component.ts","webpack:///./src/app/chart/chart-events.service.ts","webpack:///./src/app/chart/chart-grid/chart-grid-xLines/chart-grid-xLines.component.html","webpack:///./src/app/chart/chart-grid/chart-grid-xLines/chart-grid-xLines.component.scss","webpack:///./src/app/chart/chart-grid/chart-grid-xLines/chart-grid-xLines.component.ts","webpack:///./src/app/chart/chart-grid/chart-grid-xlabels/chart-grid-xLabels.component.html","webpack:///./src/app/chart/chart-grid/chart-grid-xlabels/chart-grid-xLabels.component.scss","webpack:///./src/app/chart/chart-grid/chart-grid-xlabels/chart-grid-xLabels.component.ts","webpack:///./src/app/chart/chart-grid/chart-grid-ylabels/chart-grid-yLabels.component.html","webpack:///./src/app/chart/chart-grid/chart-grid-ylabels/chart-grid-yLabels.component.scss","webpack:///./src/app/chart/chart-grid/chart-grid-ylabels/chart-grid-yLabels.component.ts","webpack:///./src/app/chart/chart-grid/chart-grid.component.html","webpack:///./src/app/chart/chart-grid/chart-grid.component.scss","webpack:///./src/app/chart/chart-grid/chart-grid.component.ts","webpack:///./src/app/chart/chart-main/chart-main.component.html","webpack:///./src/app/chart/chart-main/chart-main.component.scss","webpack:///./src/app/chart/chart-main/chart-main.component.ts","webpack:///./src/app/chart/chart-polyline/chart-polyline.component.html","webpack:///./src/app/chart/chart-polyline/chart-polyline.component.scss","webpack:///./src/app/chart/chart-polyline/chart-polyline.component.ts","webpack:///./src/app/chart/chart-thumb-frame/chart-thumb-frame.component.html","webpack:///./src/app/chart/chart-thumb-frame/chart-thumb-frame.component.scss","webpack:///./src/app/chart/chart-thumb-frame/chart-thumb-frame.component.ts","webpack:///./src/app/chart/chart-thumb/chart-thumb.component.html","webpack:///./src/app/chart/chart-thumb/chart-thumb.component.scss","webpack:///./src/app/chart/chart-thumb/chart-thumb.component.ts","webpack:///./src/app/chart/chart.component.html","webpack:///./src/app/chart/chart.component.scss","webpack:///./src/app/chart/chart.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,gJ;;;;;;;;;;;ACAA,+DAA+D,+H;;;;;;;;;;;;;;;;;;ACArB;AACQ;AAwClD;IAGE,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClC,iBAAiB;QACjB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;qBANU,YAAY;IAQjB,8BAAO,GAAb;;;;;4BACe,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC,SAAS,EAAE;;wBAA1E,IAAI,GAAG,SAAiF;wBAE9F,IAAI,CAAC,IAAI,GAAG,cAAY,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;;;;;KAC5C;IAEc,wBAAW,GAA1B,UAA2B,IAAgB;QACzC,wBAAwB;QACxB,2CAA2C;QAC3C,wDAAwD;QACxD,IAAM,UAAU,GAAiB,EAAE,CAAC;QACpC,IAAM,OAAO,GAAW,IAAI,CAAC,MAAM,CAAC;QACpC,KAAK,IAAI,OAAO,GAAW,CAAC,EAAE,OAAO,GAAG,OAAO,EAAE,OAAO,EAAE,EAAE;YAC1D,IAAM,WAAW,GAAa,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5C,IAAM,OAAO,GAAY,EAAE,CAAC;YAC5B,IAAM,OAAO,GAAc,EAAE,CAAC;YAG9B,mBAAmB;YACnB,KAAK,IAAM,GAAG,IAAI,WAAW,CAAC,KAAK,EAAE;gBACnC,IAAI,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE;oBAClC,OAAO,CAAC,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC3C,OAAO,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACvC;qBAAM;oBACL,OAAO,CAAC,IAAI,CAAC;wBACX,SAAS,EAAE,GAAG;wBACd,IAAI,EAAE,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC;wBAC5B,KAAK,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC;wBAC9B,IAAI,EAAE,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC;qBAC7B,CAAC,CAAC;iBACJ;aACF;YAGD,kBAAkB;YAClB,IAAM,UAAU,GAAW,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC;YACtD,KAAK,IAAI,UAAU,GAAW,CAAC,EAAE,UAAU,GAAG,UAAU,EAAE,UAAU,EAAE,EAAE;gBACtE,IAAM,SAAS,GAAwB,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;gBAGvE,cAAc;gBACd,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,SAAS,EAAE;oBACtC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,8BAA8B;oBACjD,OAAO,CAAC,IAAI,GAAG,SAAqB,CAAC;oBACrC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,QAAQ,EAAE,CAAC,MAAM,EAArB,CAAqB,CAAC,CAAC,IAAI,CAAC,CAAC;iBACvF;gBAGD,cAAc;gBACd,IAAM,UAAU,GAAW,OAAO,CAAC,MAAM,CAAC;gBAC1C,KAAK,IAAI,UAAU,GAAW,CAAC,EAAE,UAAU,GAAG,UAAU,EAAE,UAAU,EAAE,EAAE;oBACtE,IAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;oBAEvC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,SAAS,EAAE;wBACzC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,8BAA8B;wBACjD,UAAU,CAAC,IAAI,GAAG,SAAqB,CAAC;qBACzC;iBACF;aACF;YAGD,UAAU,CAAC,IAAI,CAAC;gBACd,CAAC,EAAE,OAAO;gBACV,CAAC,EAAE,OAAO;aACX,CAAC;SACH;QAED,OAAO,UAAU,CAAC;IACpB,CAAC;;IA5EU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAI0B,+DAAU;OAHzB,YAAY,CA6ExB;IAAD,mBAAC;CAAA;AA7EwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCiC;AACF;AACf;AAEM;AAC8B;AACpB;AACuB;AACM;AACT;AACkC;AACtB;AACQ;AACW;AACG;AAyB/G;IAAA;IAAyB,CAAC;IAAb,SAAS;QAvBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,yFAAkB;gBAClB,qEAAc;gBACd,4FAAmB;gBACnB,kGAAqB;gBACrB,yFAAkB;gBAClB,4HAAyB;gBACzB,4HAAyB;gBACzB,sGAAsB;gBACtB,8GAAwB;gBACxB,yHAAwB;aACzB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE;gBACT,2DAAY;aACb;SACF,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACvCtB,iEAAiE,uCAAuC,2BAA2B,wMAAwM,aAAa,c;;;;;;;;;;;ACAxV,2BAA2B,uBAAuB,yBAAyB,wBAAwB,yCAAyC,8BAA8B,uBAAuB,qBAAqB,wBAAwB,kBAAkB,oBAAoB,EAAE,kBAAkB,yBAAyB,4BAA4B,kBAAkB,mBAAmB,yBAAyB,oCAAoC,yBAAyB,sBAAsB,EAAE,wBAAwB,sBAAsB,+BAA+B,yBAAyB,2BAA2B,oBAAoB,oBAAoB,mBAAmB,2BAA2B,iBAAiB,kBAAkB,+DAA+D,+DAA+D,EAAE,+BAA+B,iBAAiB,EAAE,+CAA+C,uoE;;;;;;;;;;;;;;;;;;ACAl5B;AAII;AAa7D;IAOE,+BAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;IAAI,CAAC;IAG/D,wCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;IACxC,CAAC;IAEO,0CAAU,GAAlB,UAAmB,MAAkB,EAAE,KAAa;QAClD,MAAM,CAAC,SAAS,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC;YAC1C,KAAK,EAAE,KAAK;YACZ,SAAS,EAAE,MAAM,CAAC,SAAS;SAC5B,CAAC,CAAC;IACL,CAAC;IAEO,4CAAY,GAApB;QACE,IAAM,UAAU,GAAiB,EAAE,CAAC;QAEpC,kCAAkC;QAClC,IAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;QACvC,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,WAAW,EAAE,SAAS,EAAE,EAAE;YAC5D,IAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YAE3C,UAAU,CAAC,IAAI,CAAC;gBACd,IAAI,EAAE,WAAW,CAAC,IAAI;gBACtB,KAAK,EAAE,WAAW,CAAC,KAAK;gBACxB,SAAS,EAAE,IAAI;aAChB,CAAC,CAAC;SACJ;QAED,OAAO,UAAU,CAAC;IACpB,CAAC;IArCQ;QAAR,2DAAK,EAAE;;uDAAkB;IACjB;QAAR,2DAAK,EAAE;;2DAAoB;IAFjB,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,iIAA6C;;SAE9C,CAAC;+EAQwC,wEAAkB;OAP/C,qBAAqB,CAuCjC;IAAD,4BAAC;CAAA;AAvCiC;;;;;;;;;;;;;;;;;;ACjBuB;AAezD;IAKE;QAJA,mBAAc,GAAoC,IAAI,0DAAY,EAAE,CAAC;QACrE,iBAAY,GAAkC,IAAI,0DAAY,EAAE,CAAC;QACjE,iBAAY,GAAyB,IAAI,0DAAY,EAAE,CAAC;IAExC,CAAC;IALN,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,kBAAkB,CAM9B;IAAD,yBAAC;CAAA;AAN8B;;;;;;;;;;;;ACf/B,wQ;;;;;;;;;;;ACAA,+DAA+D,mM;;;;;;;;;;;;;;;;;ACAN;AAmBzD;IASE;IACA,CAAC;IAGD,2CAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;IACpC,CAAC;IAGO,6CAAU,GAAlB;QACE,IAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE;YACjF,0CAA0C;YAC1C,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;YAC5E,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;YACzC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC;YAE9C,QAAQ,CAAC,IAAI,CAAC;gBACZ,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK;gBAClB,EAAE,EAAE,OAAO;gBACX,EAAE,EAAE,OAAO;gBACX,MAAM,EAAE,SAAS;gBACjB,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe;aAChD,CAAC,CAAC;SACJ;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;IApCQ;QAAR,2DAAK,EAAE;;0DAAkB;IACjB;QAAR,2DAAK,EAAE;;8DAAoB;IACnB;QAAR,2DAAK,EAAE;;yDAAe;IAHZ,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,wJAAiD;;SAElD,CAAC;;OACW,wBAAwB,CAsCpC;IAAD,+BAAC;CAAA;AAtCoC;;;;;;;;;;;;ACnBrC,uOAAuO,YAAY,gB;;;;;;;;;;;ACAnP,+DAA+D,mM;;;;;;;;;;;;;;;;;;ACAK;AAKa;AAiCjF;IASE,mCAAoB,kBAAsC;QAA1D,iBAQC;QARmB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACxD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,kBAAkB;aAChC,YAAY;aACZ,SAAS,CAAC,UAAC,YAA6B;YACzC,IAAI,KAAI,CAAC,UAAU,IAAI,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjD,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,4CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;YACjC,IAAI,EAAE,CAAC;YACP,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB;SAC1D,CAAC,CAAC;IACL,CAAC;IAED,+CAAW,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IAEO,+CAAW,GAAnB,UAAoB,YAA6B;QAC/C,IAAM,iBAAiB,GAAsB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QAE/E,IAAM,UAAU,GAAG,EAAE,CAAC;QACtB,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,iBAAiB,CAAC,YAAY,EAAE,UAAU,EAAE,EAAE;YAClF,IAAM,WAAW,GAAgB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC;YAE9E,UAAU,CAAC,IAAI,CAAC;gBACd,KAAK,EAAE,WAAW,CAAC,KAAK;gBACxB,CAAC,EAAE,WAAW,CAAC,MAAM;gBACrB,CAAC,EAAE,WAAW,CAAC,MAAM;gBACrB,OAAO,EAAE,GAAG;gBACZ,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ;gBACrC,IAAI,EAAE,OAAO;aACd,CAAC,CAAC;SACJ;QAED,OAAO,UAAU,CAAC;IACpB,CAAC;IAEO,gDAAY,GAApB,UAAqB,YAA6B;QAChD,IAAM,iBAAiB,GAAsB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QAE/E,IAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QAC7C,KAAK,IAAI,aAAa,GAAG,CAAC,EAAE,aAAa,GAAG,aAAa,EAAE,aAAa,EAAE,EAAE;YAC1E,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;YAEjD,IAAM,WAAW,GAAgB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,aAAa,CAAC,CAAC;YAEjF,IAAI,SAAS,CAAC,KAAK,KAAK,WAAW,CAAC,KAAK,EAAE;gBACzC,SAAS,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;gBACpC,SAAS,CAAC,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC;aAClC;SACF;IACH,CAAC;IAEO,kDAAc,GAAtB,UAAuB,YAA6B;QAClD,iBAAiB;QACjB,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAGnD,6BAA6B;QAC7B,IAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;QAG/E,gCAAgC;QAChC,IAAM,cAAc,GAAG,UAAU,GAAG,CAAC,CAAC;QAGtC,iCAAiC;QACjC,qCAAqC;QACrC,IAAI,YAAY,GAAG,MAAM,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,UAAU,GAAG,cAAc,CAAC,CAAC;QAC/F,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAGxC,uCAAuC;QACvC,IAAM,gBAAgB,GAAa,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC;QAG7F,kDAAkD;QAClD,IAAI,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,GAAG,YAAY,CAAC,CAAC;QAC5E,4BAA4B;QAC5B,IAAI,wBAAwB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,GAAG,YAAY,GAAG,CAAC,CAAC,CAAC;QAGtF,qDAAqD;QACrD,IAAI,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,GAAG,YAAY,CAAC,CAAC;QACtE,yBAAyB;QACzB,IAAI,wBAAwB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,GAAG,YAAY,GAAG,CAAC,CAAC,CAAC;QAEhF,OAAO;YACL,UAAU;YACV,MAAM;YACN,YAAY;YACZ,gBAAgB;YAChB,kBAAkB;YAClB,wBAAwB;YACxB,kBAAkB;YAClB,wBAAwB;SACzB;IACH,CAAC;IAEO,4CAAQ,GAAhB,UAAiB,iBAAoC,EAAE,KAAa;QAEhE,6CAAU,EACV,iCAAM,EACN,qDAAgB,EAChB,yDAAkB,EAClB,qEAAwB,EACxB,yDAAkB,EAClB,qEAAwB,CACJ;QAEtB,iCAAiC;QACjC,IAAI,aAAa,GAAG,kBAAkB,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,wBAAwB,CAAC;QAEhF,YAAY;QACZ,IAAM,KAAK,GAAG,gBAAgB,CAAC,aAAa,CAAC,CAAE,CAAC,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;QAClG,kBAAkB;QAClB,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC;QAEzD,iCAAiC;QACjC,IAAI,MAAM,GAAG,kBAAkB,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,wBAAwB,CAAC;QACzE,wCAAwC;QACxC,MAAM,IAAI,UAAU,GAAG,CAAC,CAAC;QAEzB,OAAO;YACL,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC;YACpB,MAAM;YACN,MAAM;SACP,CAAC;IACJ,CAAC;IA7IQ;QAAR,2DAAK,EAAE;;+DAAoB;IACnB;QAAR,2DAAK,EAAE;;4DAAgB;IAFb,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;YACpC,2JAAkD;;SAEnD,CAAC;+EAUwC,wEAAkB;OAT/C,yBAAyB,CA+IrC;IAAD,gCAAC;CAAA;AA/IqC;;;;;;;;;;;;ACtCtC,uMAAuM,aAAa,gB;;;;;;;;;;;ACApN,+DAA+D,mM;;;;;;;;;;;;;;;;;;;ACAK;AAGH;AACgB;AAgBjF;IAUE,mCAAoB,kBAAsC;QAA1D,iBAQC;QARmB,uBAAkB,GAAlB,kBAAkB,CAAoB;QALlD,uBAAkB,GAAG,CAAC,CAAC;QAM7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,kBAAkB;aAChC,YAAY;aACZ,SAAS,CAAC,UAAC,YAA6B;YACzC,IAAI,KAAI,CAAC,UAAU,IAAI,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjD,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,4CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IACvC,CAAC;IAED,+CAAW,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IAEO,+CAAW,GAAnB;QACE,IAAM,UAAU,GAAG,EAAE,CAAC;QACtB,IAAI,OAAO,GAAG,+DAAc,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAEvG,qCAAqC;QACrC,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE;YACjF,0CAA0C;YAC1C,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;YAChF,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;YACnC,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC;YAE7B,sCAAsC;YACtC,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;YACtD,qCAAqC;YACrC,KAAK,IAAI,SAAS,GAAG,OAAO,CAAC;YAE7B,UAAU,CAAC,IAAI,CAAC;gBACd,KAAK;gBACL,CAAC,EAAE,CAAC;gBACJ,CAAC;gBACD,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ;gBACrC,IAAI,EAAE,OAAO;aACd,CAAC,CAAC;SACJ;QAED,OAAO,UAAU,CAAC;IACpB,CAAC;IAEO,gDAAY,GAApB,UAAqB,YAA6B;QAChD,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACnC,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,QAAQ,EAAE,QAAQ,EAAE,EAAE;YACtD,IAAM,OAAO,GAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9C,IAAM,UAAU,GAAkB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC;YACzF,YAAY,GAAG,YAAY,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,UAAU,EAAE,CAAC,CAAC,YAAY,CAAC;SAChG;QAED,IAAM,OAAO,GAAG,+DAAc,CAAC,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC1F,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAExD,IAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QAC7C,KAAK,IAAI,aAAa,GAAG,CAAC,EAAE,aAAa,GAAG,aAAa,EAAE,aAAa,EAAE,EAAE;YAC1E,IAAM,OAAO,GAAe,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;YAE3D,0CAA0C;YAC1C,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;YACpF,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;YACnC,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC;YAE7B,sCAAsC;YACtC,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;YACtD,qCAAqC;YACrC,KAAK,IAAI,aAAa,GAAG,OAAO,CAAC;YAEjC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;YACd,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;SACvB;IACH,CAAC;IArFQ;QAAR,2DAAK,EAAE;;+DAAoB;IACnB;QAAR,2DAAK,EAAE;;4DAAkB;IAFf,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;YACpC,2JAAkD;;SAEnD,CAAC;+EAWwC,wEAAkB;OAV/C,yBAAyB,CAuFrC;IAAD,gCAAC;CAAA;AAvFqC;;;;;;;;;;;;ACpBtC,yT;;;;;;;;;;;ACAA,+DAA+D,+J;;;;;;;;;;;;;;;;;ACAN;AASzD;IAME;IAAgB,CAAC;IAGjB,qCAAQ,GAAR;IACA,CAAC;IATQ;QAAR,2DAAK,EAAE;;oDAAkB;IACjB;QAAR,2DAAK,EAAE;;wDAAoB;IACnB;QAAR,2DAAK,EAAE;;mDAAe;IAHZ,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,wHAA0C;;SAE3C,CAAC;;OACW,kBAAkB,CAW9B;IAAD,yBAAC;CAAA;AAX8B;;;;;;;;;;;;ACT/B,ob;;;;;;;;;;;ACAA,yBAAyB,mBAAmB,qBAAqB,EAAE,+CAA+C,+b;;;;;;;;;;;;;;;;;;ACA9C;AAIU;AAQ9E;IAWE,4BAAoB,kBAAsC;QAA1D,iBAUC;QAVmB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACxD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,kBAAkB;aAChC,YAAY;aACZ,SAAS,CAAC,UAAC,YAA6B;YACzC,qEAAqE;YACrE,KAAI,CAAC,YAAY,GAAG;gBAClB,IAAI,EAAE,YAAY,CAAC,IAAI;gBACvB,EAAE,EAAE,YAAY,CAAC,EAAE;aACpB,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,qCAAQ,GAAR;QACE,IAAI,CAAC,GAAG,GAAG,mDACN,IAAI,CAAC,QAAQ,CAAC,IAAI,IACrB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,GAC5B,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,SAAO,IAAI,CAAC,GAAG,CAAC,KAAK,SAAI,IAAI,CAAC,GAAG,CAAC,MAAQ,CAAC;IAC5D,CAAC;IAED,wCAAW,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IAjCQ;QAAR,2DAAK,EAAE;;oDAAkB;IACjB;QAAR,2DAAK,EAAE;;wDAAoB;IAFjB,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,wHAA0C;;SAE3C,CAAC;+EAYwC,wEAAkB;OAX/C,kBAAkB,CAmC9B;IAAD,yBAAC;CAAA;AAnC8B;;;;;;;;;;;;ACZ/B,gY;;;;;;;;;;;ACAA,+DAA+D,2K;;;;;;;;;;;;;;;;;;ACA+B;AAIG;AAkBjG;IAWE,gCAAoB,kBAAsC;QAA1D,iBAeC;QAfmB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACxD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,kBAAkB;aAChC,cAAc;aACd,SAAS,CAAC,UAAC,QAA2B;YACrC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC;QAC1F,CAAC,CAAC,CAAC;QAGL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,kBAAkB;aAChC,YAAY;aACZ,SAAS,CAAC,UAAC,YAAoB;YAC9B,IAAI,KAAI,CAAC,QAAQ,IAAI,KAAI,CAAC,QAAQ,CAAC,aAAa,EAAE;gBAChD,KAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,YAAY,CAAC;aAC5C;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,yCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;IAC1C,CAAC;IAED,4CAAW,GAAX,UAAY,OAAsB;QAChC,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YACnD,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC,YAAY,CAAC;YACtD,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;IACH,CAAC;IAED,4CAAW,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IAEO,8CAAa,GAArB;QACE,IAAM,WAAW,GAAkB,EAAE,CAAC;QACtC,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACnC,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,QAAQ,EAAE,QAAQ,EAAE,EAAE;YACtD,IAAM,OAAO,GAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9C,IAAM,UAAU,GAAkB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YACnG,IAAM,SAAS,GAAa,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAEpD,WAAW,CAAC,IAAI,CAAC;gBACf,MAAM,EAAE,SAAS;gBACjB,MAAM,EAAE,OAAO,CAAC,KAAK;gBACrB,QAAQ,EAAE,OAAO,CAAC,IAAI;gBACtB,QAAQ,EAAE,OAAO,CAAC,IAAI;gBACtB,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,mBAAmB;gBACzC,UAAU,EAAE,SAAS;gBACrB,IAAI,EAAE,MAAM;aACb,CAAC,CAAC;SACJ;QAED,OAAO,WAAW,CAAC;IACrB,CAAC;IAEO,+CAAc,GAAtB;QACE,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACnC,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,QAAQ,EAAE,QAAQ,EAAE,EAAE;YACtD,IAAM,OAAO,GAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9C,IAAM,WAAW,GAAgB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC5D,IAAM,UAAU,GAAkB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YAEnG,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SAC9C;IACH,CAAC;IAEO,uCAAM,GAAd,UAAe,IAAmB;QAChC,IAAM,SAAS,GAAG,EAAE,CAAC;QACrB,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAEjE,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,UAAU,EAAE,SAAS,EAAE,EAAE;YAC3D,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACtC,IAAM,YAAY,GAAW,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;YACrE,IAAM,MAAM,GAAG,CAAC,YAAY,GAAG,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACrD,kCAAkC;YAClC,IAAI,MAAM,GAAG,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;YACnD,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;YACjD,sCAAsC;YACtC,MAAM,GAAG,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YAE9E,2BAA2B;YAC3B,SAAS,CAAC,IAAI,CAAI,MAAM,SAAI,MAAQ,CAAC,CAAC;SACvC;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IAjGQ;QAAR,2DAAK,EAAE;;yDAAkB;IACjB;QAAR,2DAAK,EAAE;;4DAAoB;IACnB;QAAR,2DAAK,EAAE;;gEAA+B;IAC9B;QAAR,2DAAK,EAAE;;uDAAe;IAJZ,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,oIAA8C;;SAE/C,CAAC;+EAYwC,wEAAkB;OAX/C,sBAAsB,CAmGlC;IAAD,6BAAC;CAAA;AAnGkC;;;;;;;;;;;;ACtBnC,qZ;;;;;;;;;;;ACAA,+DAA+D,mL;;;;;;;;;;;;;;;;;;ACKxC;AAGuD;AAE9E,IAAK,OAMJ;AAND,WAAK,OAAO;IACV,iCAAE;IACF,iCAAE;IACF,iCAAE;IACF,mCAAG;IACH,mCAAG;AACL,CAAC,EANI,OAAO,KAAP,OAAO,QAMX;AAiBD;IAsDE,kCAAoB,kBAAsC,EAAU,GAAe;QAA/D,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAU,QAAG,GAAH,GAAG,CAAY;QAlD3E,YAAO,GAAc;YAC3B;gBACE,MAAM,EAAE,OAAO,CAAC,EAAE;gBAClB,WAAW,EAAE,KAAK;gBAClB,CAAC,EAAE,IAAI;gBACP,CAAC,EAAE,IAAI;gBACP,KAAK,EAAE,IAAI;gBACX,MAAM,EAAE,IAAI;gBACZ,IAAI,EAAE,yBAAyB;aAChC;YACD;gBACE,MAAM,EAAE,OAAO,CAAC,EAAE;gBAClB,WAAW,EAAE,KAAK;gBAClB,CAAC,EAAE,IAAI;gBACP,CAAC,EAAE,IAAI;gBACP,KAAK,EAAE,IAAI;gBACX,MAAM,EAAE,IAAI;gBACZ,IAAI,EAAE,yBAAyB;aAChC;YACD;gBACE,MAAM,EAAE,OAAO,CAAC,EAAE;gBAClB,WAAW,EAAE,IAAI;gBACjB,CAAC,EAAE,IAAI;gBACP,CAAC,EAAE,IAAI;gBACP,KAAK,EAAE,IAAI;gBACX,MAAM,EAAE,IAAI;gBACZ,IAAI,EAAE,kBAAkB;aACzB;YACD;gBACE,MAAM,EAAE,OAAO,CAAC,GAAG;gBACnB,WAAW,EAAE,IAAI;gBACjB,CAAC,EAAE,IAAI;gBACP,CAAC,EAAE,IAAI;gBACP,KAAK,EAAE,IAAI;gBACX,MAAM,EAAE,IAAI;gBACZ,IAAI,EAAE,oBAAoB;aAC3B;YACD;gBACE,MAAM,EAAE,OAAO,CAAC,GAAG;gBACnB,WAAW,EAAE,IAAI;gBACjB,CAAC,EAAE,IAAI;gBACP,CAAC,EAAE,IAAI;gBACP,KAAK,EAAE,IAAI;gBACX,MAAM,EAAE,IAAI;gBACZ,IAAI,EAAE,oBAAoB;aAC3B;SACF,CAAC;IAIoF,CAAC;IAGvF,2CAAQ,GAAR;QACE,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAEO,sDAAmB,GAA3B;QACE,8BAA8B;QAC9B,IAAM,OAAO,GAAG,EAAE,CAAC;QACnB,4BAA4B;QAC5B,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC;QAEvE,iCAAiC;QACjC,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACvC,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,UAAU,EAAE,UAAU,EAAE,EAAE;YAC9D,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACxC,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,IAAI,SAAS,GAAG,CAAC,CAAC;YAGlB,QAAQ,UAAU,EAAE;gBAClB,KAAK,OAAO,CAAC,EAAE;oBACb,aAAa,GAAG,CAAC,CAAC;oBAClB,SAAS,GAAG,CAAC,CAAC;oBACd,MAAM;gBACR,KAAK,OAAO,CAAC,EAAE;oBACb,sDAAsD;oBACtD,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC;oBAC/C,sCAAsC;oBACtC,SAAS,GAAG,OAAO,CAAC;oBACpB,MAAM;gBACR,KAAK,OAAO,CAAC,EAAE;oBACb,aAAa,GAAG,OAAO,CAAC;oBACxB,SAAS,GAAG,CAAC,CAAC;oBACd,MAAM;gBACR,KAAK,OAAO,CAAC,GAAG;oBACd,aAAa,GAAG,OAAO,CAAC;oBACxB,SAAS,GAAG,CAAC,CAAC;oBACd,MAAM;gBACR,KAAK,OAAO,CAAC,GAAG;oBACd,aAAa,GAAG,OAAO,CAAC;oBACxB,2EAA2E;oBAC3E,SAAS,GAAG,OAAO,GAAG,OAAO,CAAC;oBAC9B,MAAM;aACT;YAGD,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC;YACvB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;YACf,QAAQ,CAAC,KAAK,GAAG,aAAa,CAAC;YAC/B,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;SAC7C;QAED,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAEO,2DAAwB,GAAhC;QACE,yBAAyB;QAD3B,iBA8BC;QA3BC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,EAAE,UAAC,KAAK;YACzD,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,EAAE,UAAC,KAAK;YACzD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,EAAE;YACjD,KAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,gBAAgB,CAAC,YAAY,EAAE;YACpD,KAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,gBAAgB,CAAC,YAAY,EAAE,UAAC,KAAK;YAC1D,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,EAAE,UAAC,KAAK;YACzD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,gBAAgB,CAAC,UAAU,EAAE;YAClD,KAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,gBAAgB,CAAC,YAAY,EAAE;YACpD,KAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,gBAAgB,CAAC,aAAa,EAAE;YACrD,KAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,4CAAS,GAAjB,UAAkB,KAAK;QACrB,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,EAAE;YACnD,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,kBAAkB;YAClB,IAAI,CAAC,MAAM,GAAG;gBACZ,EAAE,EAAE,KAAK,CAAC,MAAM;gBAChB,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK;gBAC/B,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK;gBACvC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;aACvC,CAAC;SACH;IACH,CAAC;IAEO,yCAAM,GAAd,UAAe,KAAK;QAClB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE;YACjC,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC;YAGnE,2BAA2B;YAC3B,IAAI,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAC5C,0BAA0B;YAC1B,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAG7D,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC;YAGtE,QAAQ,MAAM,EAAE;gBACd,KAAK,OAAO,CAAC,GAAG,CAAC;gBACjB,KAAK,OAAO,CAAC,GAAG;oBACd,cAAc;oBACd,oCAAoC;oBACpC,IAAI,MAAM,KAAK,OAAO,CAAC,GAAG,EAAE;wBAC1B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC1F,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAEzD,kCAAkC;wBAClC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;qBAC7D;yBACI,IAAI,MAAM,KAAK,OAAO,CAAC,GAAG,EAAE;wBAC/B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;wBAE7H,kCAAkC;wBAClC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACpF,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;qBAC5F;oBACD,MAAM;gBACR,KAAK,OAAO,CAAC,EAAE;oBACb,YAAY;oBACZ,kCAAkC;oBAClC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBAE5D,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACxI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;oBAG3G,oCAAoC;oBACpC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACzD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;oBAC3F,MAAM;aACT;YAGD,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;IACH,CAAC;IAEO,0CAAO,GAAf;QACE,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,uBAAuB;QACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAEO,gDAAa,GAArB;QACE,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QACnG,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QACnG,EAAE,IAAI,IAAI,CAAC;QAEX,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,IAAI,QAAE,EAAE,MAAC,CAAC,CAAC;IACxD,CAAC;IAEO,oDAAiB,GAAzB,UAA0B,KAAK;QAC7B,wBAAwB;QACxB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QAC3D,IAAI,KAAK,CAAC,OAAO,EAAE;YACjB,uCAAuC;YACvC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAC1B;QAED,uBAAuB;QACvB,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACzC,CAAC;IAEO,8CAAW,GAAnB,UAAoB,GAAG;QACrB,IAAI,GAAG,IAAI,CAAC,EAAE;YACZ,OAAO,CAAC,CAAC;SACV;aACI,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACpC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC7B;aACI;YACH,OAAO,GAAG,CAAC;SACZ;IACH,CAAC;IAtPQ;QAAR,2DAAK,EAAE;;8DAAoB;IACnB;QAAR,2DAAK,EAAE;;kEAA+B;IAF5B,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,6IAAiD;;SAElD,CAAC;+EAuDwC,wEAAkB,EAAe,wDAAU;OAtDxE,wBAAwB,CAwPpC;IAAD,+BAAC;CAAA;AAxPoC;;;;;;;;;;;;ACjCrC,ie;;;;;;;;;;;ACAA,yBAAyB,mBAAmB,EAAE,eAAe,kBAAkB,EAAE,+CAA+C,2e;;;;;;;;;;;;;;;;;ACAvE;AAWzD;IASE;IAAe,CAAC;IAGV,sCAAQ,GAAd;;;gBACE,IAAI,CAAC,GAAG,GAAG,mDACN,IAAI,CAAC,QAAQ,CAAC,KAAK,IACtB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,GAC5B,CAAC;gBACF,IAAI,CAAC,OAAO,GAAG,SAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,SAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAQ,CAAC;gBAC1E,IAAI,CAAC,YAAY,GAAG;oBAClB,IAAI,EAAE,CAAC;oBACP,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;iBACxB,CAAC;;;;KACH;IArBQ;QAAR,2DAAK,EAAE;;qDAAkB;IACjB;QAAR,2DAAK,EAAE;;yDAAoB;IAFjB,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,2HAA2C;;SAE5C,CAAC;;OACW,mBAAmB,CAuB/B;IAAD,0BAAC;CAAA;AAvB+B;;;;;;;;;;;;ACXhC,0Q;;;;;;;;;;;ACAA,+DAA+D,2I;;;;;;;;;;;;;;;;;;ACAK;AAES;AAoD7E;IA+CE,wBAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QA7C1D,aAAQ,GAAa;YACnB,iDAAiD;YACjD,MAAM,EAAE,MAAM,CAAC,UAAU;YACzB,aAAa,EAAE,IAAI;YACnB,KAAK,EAAE,IAAI;YACX,iBAAiB,EAAE,GAAG;YAEtB,IAAI,EAAE;gBACJ,MAAM,EAAE,GAAG;gBACX,mBAAmB,EAAE,CAAC;gBACtB,UAAU,EAAE,EAAE;aACf;YACD,KAAK,EAAE;gBACL,MAAM,EAAE,GAAG;gBACX,mBAAmB,EAAE,CAAC;aACvB;YACD,IAAI,EAAE;gBACJ,eAAe,EAAE,CAAC;gBAClB,YAAY,EAAE,CAAC;gBACf,QAAQ,EAAE,EAAE;aACb;SACF,CAAC;IAwB2D,CAAC;uBA/CnD,cAAc;IA0BlB,yBAAU,GAAjB,UAAkB,GAAW;QAC3B,kBAAkB;QAClB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrB,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,+BAA+B;;gBAE5E,MAAM,CAAC,QAAK,GAAG,CAAC,QAAQ,EAAE,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC,8DAA8D;IAE5G,CAAC;IAEM,4BAAa,GAApB,UAAqB,KAAgB;QACnC,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,KAAK,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE;YAChE,IAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YACnC,YAAY,GAAG,YAAY,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,YAAY,CAAC;SACtG;QAED,kBAAkB;QAClB,OAAO,gBAAc,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;IACjD,CAAC;IAMD,iCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,gBAAc,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;QAE3D,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC;YACxC,IAAI,EAAE,CAAC;YACP,iDAAiD;YACjD,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC;SACtE,CAAC,CAAC;IACL,CAAC;;IA3DQ;QAAR,2DAAK,EAAE;;gDAAkB;IADf,cAAc;QAN1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,mGAAqC;YAErC,SAAS,EAAE,CAAC,wEAAkB,CAAC;;SAChC,CAAC;+EAgDwC,wEAAkB;OA/C/C,cAAc,CA6D1B;IAAD,qBAAC;CAAA;AA7D0B;;;;;;;;;;;;;ACtD3B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<ng-container *ngIf=\\\"data\\\">\\r\\n  <app-chart *ngFor=\\\"let item of data\\\" [data]=\\\"item\\\"></app-chart>\\r\\n</ng-container>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nexport interface ChartMetaObj {\r\n  [key: string]: string;\r\n}\r\n\r\nexport type ChartMetaData = number[];\r\n\r\nexport interface ChartObj {\r\n  columns: ChartMetaData[];\r\n  colors: ChartMetaObj;\r\n  names: ChartMetaObj;\r\n  types: ChartMetaObj;\r\n}\r\n\r\nexport interface SortedData {\r\n  x: SortedX;\r\n  y: SortedY[];\r\n}\r\n\r\nexport interface SortedX {\r\n  columnKey?: string;\r\n  type?: string;\r\n  data?: ChartMetaData;\r\n  maxValLength?: number;\r\n}\r\n\r\nexport interface SortedY {\r\n  columnKey: string;\r\n  type: string;\r\n  color: string;\r\n  name: string;\r\n  data?: ChartMetaData;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  data: SortedData[];\r\n\r\n  constructor(private http: HttpClient) {\r\n    // load test data\r\n    this.getData();\r\n  }\r\n\r\n  async getData(): Promise<void> {\r\n    const data = await this.http.get('assets/data/chart_data_test.json').toPromise() as ChartObj[];\r\n\r\n    this.data = AppComponent.prepareData(data);\r\n  }\r\n\r\n  private static prepareData(data: ChartObj[]): SortedData[] {\r\n    // modifying server data\r\n    // to protect data from further API changes\r\n    // here you can simply adapt new API structure if needed\r\n    const sortedData: SortedData[] = [];\r\n    const dataLen: number = data.length;\r\n    for (let dataIdx: number = 0; dataIdx < dataLen; dataIdx++) {\r\n      const curChartObj: ChartObj = data[dataIdx];\r\n      const sortedX: SortedX = {};\r\n      const sortedY: SortedY[] = [];\r\n\r\n\r\n      // sort object keys\r\n      for (const key in curChartObj.types) {\r\n        if (curChartObj.types[key] === 'x') {\r\n          sortedX.columnKey = curChartObj.types[key];\r\n          sortedX.type = curChartObj.types[key];\r\n        } else {\r\n          sortedY.push({\r\n            columnKey: key,\r\n            type: curChartObj.types[key],\r\n            color: curChartObj.colors[key],\r\n            name: curChartObj.names[key],\r\n          });\r\n        }\r\n      }\r\n\r\n\r\n      // sort array data\r\n      const columnsLen: number = curChartObj.columns.length;\r\n      for (let columnsIdx: number = 0; columnsIdx < columnsLen; columnsIdx++) {\r\n        const curColumn: (string | number)[] = curChartObj.columns[columnsIdx];\r\n\r\n\r\n        // save x data\r\n        if (curColumn[0] === sortedX.columnKey) {\r\n          curColumn.shift(); // remove first string element\r\n          sortedX.data = curColumn as number[];\r\n          sortedX.maxValLength = Math.max(...(curColumn.map(num => num.toString().length))) - 1;\r\n        }\r\n\r\n\r\n        // save y data\r\n        const sortedYLen: number = sortedY.length;\r\n        for (let sortedYIdx: number = 0; sortedYIdx < sortedYLen; sortedYIdx++) {\r\n          const curSortedY = sortedY[sortedYIdx];\r\n\r\n          if (curColumn[0] === curSortedY.columnKey) {\r\n            curColumn.shift(); // remove first string element\r\n            curSortedY.data = curColumn as number[];\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      sortedData.push({\r\n        x: sortedX,\r\n        y: sortedY,\r\n      })\r\n    }\r\n\r\n    return sortedData;\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ChartMainComponent } from './chart/chart-main/chart-main.component';\r\nimport { ChartComponent } from './chart/chart.component';\r\nimport { ChartThumbComponent } from './chart/chart-thumb/chart-thumb.component';\r\nimport { ChartButtonsComponent } from './chart/chart-buttons/chart-buttons.component';\r\nimport { ChartGridComponent } from './chart/chart-grid/chart-grid.component';\r\nimport { ChartGridYLabelsComponent } from './chart/chart-grid/chart-grid-ylabels/chart-grid-yLabels.component';\r\nimport { ChartPolylineComponent } from './chart/chart-polyline/chart-polyline.component';\r\nimport { ChartThumbFrameComponent } from './chart/chart-thumb-frame/chart-thumb-frame.component';\r\nimport { ChartGridXLinesComponent } from \"./chart/chart-grid/chart-grid-xLines/chart-grid-xLines.component\";\r\nimport { ChartGridXLabelsComponent } from './chart/chart-grid/chart-grid-xlabels/chart-grid-xLabels.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChartMainComponent,\r\n    ChartComponent,\r\n    ChartThumbComponent,\r\n    ChartButtonsComponent,\r\n    ChartGridComponent,\r\n    ChartGridXLabelsComponent,\r\n    ChartGridYLabelsComponent,\r\n    ChartPolylineComponent,\r\n    ChartThumbFrameComponent,\r\n    ChartGridXLinesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [\r\n    AppComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<button\\r\\n  *ngFor=\\\"let button of buttonsArr; let index = index\\\"\\r\\n  [ngClass]=\\\"{'active': button.isVisible}\\\"\\r\\n  (click)=\\\"togglePath(button, index)\\\"\\r\\n  class=\\\"button\\\"\\r\\n><span\\r\\n  [style.background]=\\\"button.isVisible ? button.color : null\\\"\\r\\n  [style.borderColor]=\\\"button.color\\\"\\r\\n></span>{{button.name}}</button>\\r\\n\"","module.exports = \".button {\\n  position: relative;\\n  display: inline-flex;\\n  align-items: center;\\n  border: 1px solid rgba(0, 0, 0, 0.1);\\n  padding: 6px 16px 6px 8px;\\n  margin-right: 10px;\\n  background: none;\\n  border-radius: 40px;\\n  outline: none;\\n  cursor: pointer; }\\n  .button span {\\n    position: relative;\\n    display: inline-block;\\n    width: 20px;\\n    height: 20px;\\n    margin-right: 10px;\\n    border: 1px solid transparent;\\n    border-radius: 50%;\\n    cursor: pointer; }\\n  .button span:after {\\n      content: \\\"\\\";\\n      border: 2px solid #fff;\\n      border-top: none;\\n      border-right: none;\\n      height: 6px;\\n      width: 10px;\\n      opacity: 0;\\n      position: absolute;\\n      top: 50%;\\n      left: 50%;\\n      -webkit-transform: rotate(-45deg) translate(0%, -100%);\\n              transform: rotate(-45deg) translate(0%, -100%); }\\n  .button.active span:after {\\n    opacity: 1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhcnQvY2hhcnQtYnV0dG9ucy9EOlxcUFJPSkVDVFNcXE1ZXFxUR0Mvc3JjXFxhcHBcXGNoYXJ0XFxjaGFydC1idXR0b25zXFxjaGFydC1idXR0b25zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLG9CQUFvQjtFQUNwQixtQkFBbUI7RUFDbkIsb0NBQW9DO0VBQ3BDLHlCQUF5QjtFQUN6QixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IsZUFBZSxFQUFBO0VBVmpCO0lBYUksa0JBQWtCO0lBQ2xCLHFCQUFxQjtJQUNyQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQiw2QkFBNkI7SUFDN0Isa0JBQWtCO0lBQ2xCLGVBQWUsRUFBQTtFQXBCbkI7TUF1Qk0sV0FBVztNQUNYLHNCQUFzQjtNQUN0QixnQkFBZ0I7TUFDaEIsa0JBQWtCO01BQ2xCLFdBQVc7TUFDWCxXQUFXO01BQ1gsVUFBVTtNQUNWLGtCQUFrQjtNQUNsQixRQUFRO01BQ1IsU0FBUztNQUNULHNEQUE4QztjQUE5Qyw4Q0FBOEMsRUFBQTtFQWpDcEQ7SUF3Q1EsVUFBVSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY2hhcnQvY2hhcnQtYnV0dG9ucy9jaGFydC1idXR0b25zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ1dHRvbiB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIHBhZGRpbmc6IDZweCAxNnB4IDZweCA4cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogNDBweDtcclxuICBvdXRsaW5lOiBub25lO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgc3BhbiB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogMjBweDtcclxuICAgIGhlaWdodDogMjBweDtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgICY6YWZ0ZXIge1xyXG4gICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICBib3JkZXI6IDJweCBzb2xpZCAjZmZmO1xyXG4gICAgICBib3JkZXItdG9wOiBub25lO1xyXG4gICAgICBib3JkZXItcmlnaHQ6IG5vbmU7XHJcbiAgICAgIGhlaWdodDogNnB4O1xyXG4gICAgICB3aWR0aDogMTBweDtcclxuICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDUwJTtcclxuICAgICAgbGVmdDogNTAlO1xyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpIHRyYW5zbGF0ZSgwJSwgLTEwMCUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJi5hY3RpdmUge1xyXG4gICAgc3BhbiB7XHJcbiAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbiJdfQ== */\"","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { SortedData } from '../../app.component';\r\nimport { Settings } from '../chart.component';\r\nimport { ChartEventsService } from '../chart-events.service';\r\n\r\nexport interface ButtonsObj {\r\n  name: string;\r\n  color: string;\r\n  isVisible: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-chart-buttons',\r\n  templateUrl: './chart-buttons.component.html',\r\n  styleUrls: ['./chart-buttons.component.scss']\r\n})\r\nexport class ChartButtonsComponent implements OnInit {\r\n  @Input() data: SortedData;\r\n  @Input() settings: Settings;\r\n  \r\n  private buttonsArr: ButtonsObj[];\r\n  \r\n  \r\n  constructor(private chartEventsService: ChartEventsService) { }\r\n  \r\n  \r\n  ngOnInit() {\r\n    this.buttonsArr = this.buildButtons();\r\n  }\r\n  \r\n  private togglePath(button: ButtonsObj, index: number) {\r\n    button.isVisible = !button.isVisible;\r\n    this.chartEventsService.togglePolyline.emit({\r\n      index: index,\r\n      isVisible: button.isVisible\r\n    });\r\n  }\r\n  \r\n  private buildButtons(): ButtonsObj[] {\r\n    const buttonsArr: ButtonsObj[] = [];\r\n\r\n    // build buttons based on polyline\r\n    const yDataLength = this.data.y.length;\r\n    for (let pathIndex = 0; pathIndex < yDataLength; pathIndex++) {\r\n      const curPolyline = this.data.y[pathIndex];\r\n  \r\n      buttonsArr.push({\r\n        name: curPolyline.name,\r\n        color: curPolyline.color,\r\n        isVisible: true\r\n      });\r\n    }\r\n    \r\n    return buttonsArr;\r\n  }\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\n\r\nexport interface TogglePolylineObj {\r\n  index: number; // polyline index\r\n  isVisible: boolean;\r\n}\r\n\r\nexport interface VisibleFrameObj {\r\n  from: number; // array index\r\n  to: number; // array index\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChartEventsService {\r\n  togglePolyline: EventEmitter<TogglePolylineObj> = new EventEmitter();\r\n  visibleFrame: EventEmitter<VisibleFrameObj> = new EventEmitter();\r\n  maxValHeight: EventEmitter<number> = new EventEmitter();\r\n  \r\n  constructor() { }\r\n}\r\n","module.exports = \"<svg:line\\r\\n  *ngFor=\\\"let line of linesArr\\\"\\r\\n  [attr.x1]=\\\"line.x1\\\"\\r\\n  [attr.x2]=\\\"line.x2\\\"\\r\\n  [attr.y1]=\\\"line.y1\\\"\\r\\n  [attr.y2]=\\\"line.y2\\\"\\r\\n  [attr.stroke]=\\\"line.stroke\\\"\\r\\n  [attr.stroke-width]=\\\"line.strokeWidth\\\"\\r\\n/>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0L2NoYXJ0LWdyaWQvY2hhcnQtZ3JpZC14TGluZXMvY2hhcnQtZ3JpZC14TGluZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { SortedData } from '../../../app.component';\r\nimport { ChartSvg, Settings } from '../../chart.component';\r\n\r\ninterface LineObj {\r\n  x1: number;\r\n  x2: number;\r\n  y1: number;\r\n  y2: number;\r\n  stroke: string;\r\n  strokeWidth: number;\r\n}\r\n\r\n@Component({\r\n  selector: '[app-chart-grid-xLines]',\r\n  templateUrl: './chart-grid-xLines.component.html',\r\n  styleUrls: ['./chart-grid-xLines.component.scss']\r\n})\r\nexport class ChartGridXLinesComponent implements OnInit {\r\n  @Input() data: SortedData;\r\n  @Input() settings: Settings;\r\n  @Input() svg: ChartSvg;\r\n  \r\n  \r\n  private linesArr: LineObj[];\r\n  \r\n  \r\n  constructor() {\r\n  }\r\n  \r\n  \r\n  ngOnInit() {\r\n    this.linesArr = this.buildLines();\r\n  }\r\n  \r\n  \r\n  private buildLines(): LineObj[] {\r\n    const linesArr = [];\r\n    for (let lineIndex = 1; lineIndex <= this.settings.grid.yLabelsCount; lineIndex++) {\r\n      // evenly distribute lines from the ground\r\n      let lineGap = this.svg.height / this.settings.grid.yLabelsCount * lineIndex;\r\n      lineGap -= this.settings.main.paddingBot;\r\n      lineGap += this.settings.grid.xLinesThickness;\r\n      \r\n      linesArr.push({\r\n        x1: 0,\r\n        x2: this.svg.width,\r\n        y1: lineGap,\r\n        y2: lineGap,\r\n        stroke: '#e8e8e8',\r\n        strokeWidth: this.settings.grid.xLinesThickness\r\n      });\r\n    }\r\n    \r\n    return linesArr;\r\n  }\r\n}\r\n","module.exports = \"<svg:text\\r\\n  *ngFor=\\\"let text of xLabelsArr\\\"\\r\\n  [attr.x]=\\\"text.x\\\"\\r\\n  [attr.y]=\\\"text.y\\\"\\r\\n  [attr.opacity]=\\\"text.opacity\\\"\\r\\n  [attr.font-size]=\\\"text.fontSize\\\"\\r\\n  [attr.fill]=\\\"text.fill\\\"\\r\\n>{{text.value}}</svg:text>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0L2NoYXJ0LWdyaWQvY2hhcnQtZ3JpZC14bGFiZWxzL2NoYXJ0LWdyaWQteExhYmVscy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { SortedX } from '../../../app.component';\r\nimport { Settings } from '../../chart.component';\r\nimport { ChartEventsService, VisibleFrameObj } from '../../chart-events.service';\r\n\r\ninterface XLabelsObj {\r\n  value: string | number;\r\n  x: number;\r\n  y: number;\r\n  opacity: string;\r\n  fontSize: number;\r\n  fill: string;\r\n}\r\n\r\ninterface BeforeLoopCalcObj {\r\n  chartWidth: number;\r\n  yPoint: number;\r\n  xLabelsCount: number;\r\n  visiblePointsArr: number[];\r\n  visibleValuesPiece: number;\r\n  visibleValuesMiddlePiece: number;\r\n  visiblePointsPiece: number;\r\n  visiblePointsMiddlePiece: number;\r\n}\r\n\r\ninterface LoopCalcObj {\r\n  value: number;\r\n  xPoint: number;\r\n  yPoint: number;\r\n}\r\n\r\n@Component({\r\n  selector: '[app-chart-grid-xLabels]',\r\n  templateUrl: './chart-grid-xLabels.component.html',\r\n  styleUrls: ['./chart-grid-xLabels.component.scss']\r\n})\r\nexport class ChartGridXLabelsComponent implements OnInit, OnDestroy {\r\n  @Input() settings: Settings;\r\n  @Input() xData: SortedX;\r\n  \r\n  \r\n  private xLabelsArr: XLabelsObj[];\r\n  private sub1: Subscription;\r\n\r\n\r\n  constructor(private chartEventsService: ChartEventsService) {\r\n    this.sub1 = this.chartEventsService\r\n      .visibleFrame\r\n      .subscribe((visibleFrame: VisibleFrameObj) => {\r\n      if (this.xLabelsArr && this.xLabelsArr.length > 0) {\r\n        this.updateLabels(visibleFrame);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.xLabelsArr = this.buildLabels({\r\n      from: 0,\r\n      to: this.settings._xLen * this.settings._initRatioPercent\r\n    });\r\n  }\r\n  \r\n  ngOnDestroy() {\r\n    this.sub1.unsubscribe();\r\n  }\r\n\r\n  private buildLabels(visibleFrame: VisibleFrameObj): XLabelsObj[] {\r\n    const beforeLoopCalcObj: BeforeLoopCalcObj = this.beforeLoopCalc(visibleFrame);\r\n  \r\n    const xLabelsArr = [];\r\n    for (let xDataIndex = 0; xDataIndex < beforeLoopCalcObj.xLabelsCount; xDataIndex++) {\r\n      const loopCalcObj: LoopCalcObj = this.loopCalc(beforeLoopCalcObj, xDataIndex);\r\n  \r\n      xLabelsArr.push({\r\n        value: loopCalcObj.value,\r\n        x: loopCalcObj.xPoint,\r\n        y: loopCalcObj.yPoint,\r\n        opacity: '1',\r\n        fontSize: this.settings.grid.fontSize,\r\n        fill: 'black',\r\n      });\r\n    }\r\n  \r\n    return xLabelsArr;\r\n  }\r\n  \r\n  private updateLabels(visibleFrame: VisibleFrameObj) {\r\n    const beforeLoopCalcObj: BeforeLoopCalcObj = this.beforeLoopCalc(visibleFrame);\r\n\r\n    const xLabelsArrLen = this.xLabelsArr.length;\r\n    for (let xLabelsArrIdx = 0; xLabelsArrIdx < xLabelsArrLen; xLabelsArrIdx++) {\r\n      const curXLabel = this.xLabelsArr[xLabelsArrIdx];\r\n\r\n      const loopCalcObj: LoopCalcObj = this.loopCalc(beforeLoopCalcObj, xLabelsArrIdx);\r\n\r\n      if (curXLabel.value !== loopCalcObj.value) {\r\n        curXLabel.value = loopCalcObj.value;\r\n        curXLabel.x = loopCalcObj.xPoint;\r\n      }\r\n    }\r\n  }\r\n  \r\n  private beforeLoopCalc(visibleFrame: VisibleFrameObj): BeforeLoopCalcObj {\r\n    // one char width\r\n    const chartWidth = this.settings.grid.fontSize / 2;\r\n  \r\n  \r\n    // calculate y point position\r\n    const yPoint = this.settings.main.height - (this.settings.main.paddingBot / 2);\r\n    \r\n    \r\n    // left right padding (in chars)\r\n    const xLabelsPadding = chartWidth * 6;\r\n    \r\n    \r\n    // calculate visible values count\r\n    // according to value width + padding\r\n    let xLabelsCount = window.innerWidth / (this.xData.maxValLength * chartWidth + xLabelsPadding);\r\n    xLabelsCount = Math.floor(xLabelsCount);\r\n    \r\n    \r\n    // get values according to visibleFrame\r\n    const visiblePointsArr: number[] = this.xData.data.slice(visibleFrame.from, visibleFrame.to);\r\n  \r\n  \r\n    // distribute values according to visiblePointsArr\r\n    let visibleValuesPiece = Math.floor(visiblePointsArr.length / xLabelsCount);\r\n    // middle of one value piece\r\n    let visibleValuesMiddlePiece = Math.floor(visiblePointsArr.length / xLabelsCount / 2);\r\n    \r\n    \r\n    // distribute x points according to window.innerWidth\r\n    let visiblePointsPiece = Math.floor(window.innerWidth / xLabelsCount);\r\n    // middle of one x points\r\n    let visiblePointsMiddlePiece = Math.floor(window.innerWidth / xLabelsCount / 2);\r\n    \r\n    return {\r\n      chartWidth,\r\n      yPoint,\r\n      xLabelsCount,\r\n      visiblePointsArr,\r\n      visibleValuesPiece,\r\n      visibleValuesMiddlePiece,\r\n      visiblePointsPiece,\r\n      visiblePointsMiddlePiece\r\n    }\r\n  }\r\n  \r\n  private loopCalc(beforeLoopCalcObj: BeforeLoopCalcObj, index: number): LoopCalcObj {\r\n    const {\r\n      chartWidth,\r\n      yPoint,\r\n      visiblePointsArr,\r\n      visibleValuesPiece,\r\n      visibleValuesMiddlePiece,\r\n      visiblePointsPiece,\r\n      visiblePointsMiddlePiece\r\n    } = beforeLoopCalcObj;\r\n    \r\n    // get middle index of each piece\r\n    let pointValueIdx = visibleValuesPiece * (index + 1) - visibleValuesMiddlePiece;\r\n    \r\n    // get value\r\n    const value = visiblePointsArr[pointValueIdx]  ? visiblePointsArr[pointValueIdx].toString() : '0';\r\n    // get value width\r\n    const valueWidth = Math.round(value.length * chartWidth);\r\n  \r\n    // get middle point of each piece\r\n    let xPoint = visiblePointsPiece * (index + 1) - visiblePointsMiddlePiece;\r\n    // and set it in the middle of the value\r\n    xPoint -= valueWidth / 2;\r\n    \r\n    return {\r\n      value: Number(value),\r\n      xPoint,\r\n      yPoint,\r\n    };\r\n  }\r\n}\r\n","module.exports = \"<svg:text\\r\\n  *ngFor=\\\"let label of yLabelsArr\\\"\\r\\n  [attr.x]=\\\"label.x\\\"\\r\\n  [attr.y]=\\\"label.y\\\"\\r\\n  [attr.font-size]=\\\"label.fontSize\\\"\\r\\n  [attr.fill]=\\\"label.fill\\\"\\r\\n>{{label.value}}</svg:text>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0L2NoYXJ0LWdyaWQvY2hhcnQtZ3JpZC15bGFiZWxzL2NoYXJ0LWdyaWQteUxhYmVscy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { ChartComponent, Settings } from \"../../chart.component\";\r\nimport { ChartEventsService, VisibleFrameObj } from '../../chart-events.service';\r\nimport { ChartMetaData, SortedY } from '../../../app.component';\r\n\r\ninterface YLabelsObj {\r\n  value: number;\r\n  x: number;\r\n  y: number;\r\n  fontSize: number;\r\n  fill: string;\r\n}\r\n\r\n@Component({\r\n  selector: '[app-chart-grid-yLabels]',\r\n  templateUrl: './chart-grid-yLabels.component.html',\r\n  styleUrls: ['./chart-grid-yLabels.component.scss']\r\n})\r\nexport class ChartGridYLabelsComponent implements OnInit, OnDestroy {\r\n  @Input() settings: Settings;\r\n  @Input() yData: SortedY[];\r\n  \r\n  \r\n  private horNumMarginBottom = 5;\r\n  private yLabelsArr: YLabelsObj[];\r\n  private sub1: Subscription;\r\n  \r\n  \r\n  constructor(private chartEventsService: ChartEventsService) {\r\n    this.sub1 = this.chartEventsService\r\n      .visibleFrame\r\n      .subscribe((visibleFrame: VisibleFrameObj) => {\r\n      if (this.yLabelsArr && this.yLabelsArr.length > 0) {\r\n        this.updateLabels(visibleFrame);\r\n      }\r\n    });\r\n  }\r\n  \r\n\r\n  ngOnInit() {\r\n    this.yLabelsArr = this.buildLabels();\r\n  }\r\n  \r\n  ngOnDestroy() {\r\n    this.sub1.unsubscribe();\r\n  }\r\n  \r\n  private buildLabels(): YLabelsObj[] {\r\n    const yLabelsArr = [];\r\n    let horStep = ChartComponent.roundUpVal(this.settings._maxValHeight / this.settings.grid.yLabelsCount);\r\n\r\n    // build horizontal lines on the data\r\n    for (let lineIndex = 1; lineIndex <= this.settings.grid.yLabelsCount; lineIndex++) {\r\n      // evenly distribute lines from the ground\r\n      let y = this.settings.main.height / this.settings.grid.yLabelsCount * lineIndex;\r\n      y -= this.settings.main.paddingBot;\r\n      y -= this.horNumMarginBottom;\r\n\r\n      // multiply line on proportional value\r\n      let value = this.settings.grid.yLabelsCount * horStep;\r\n      // and show it from biggest to lowest\r\n      value -= lineIndex * horStep;\r\n\r\n      yLabelsArr.push({\r\n        value,\r\n        x: 0,\r\n        y,\r\n        fontSize: this.settings.grid.fontSize,\r\n        fill: 'black',\r\n      });\r\n    }\r\n\r\n    return yLabelsArr;\r\n  }\r\n  \r\n  private updateLabels(visibleFrame: VisibleFrameObj) {\r\n    let maxValHeight = 0;\r\n    const yDataLen = this.yData.length;\r\n    for (let yDataIdx = 0; yDataIdx < yDataLen; yDataIdx++) {\r\n      const curData: SortedY = this.yData[yDataIdx];\r\n      const curDataArr: ChartMetaData = curData.data.slice(visibleFrame.from, visibleFrame.to);\r\n      maxValHeight = maxValHeight < Math.max(...curDataArr) ? Math.max(...curDataArr) : maxValHeight;\r\n    }\r\n  \r\n    const horStep = ChartComponent.roundUpVal(maxValHeight / this.settings.grid.yLabelsCount);\r\n    this.chartEventsService.maxValHeight.emit(maxValHeight);\r\n  \r\n    const yLabelsArrLen = this.yLabelsArr.length;\r\n    for (let yLabelsArrIdx = 0; yLabelsArrIdx < yLabelsArrLen; yLabelsArrIdx++) {\r\n      const curItem: YLabelsObj = this.yLabelsArr[yLabelsArrIdx];\r\n  \r\n      // evenly distribute lines from the ground\r\n      let y = this.settings.main.height / this.settings.grid.yLabelsCount * yLabelsArrIdx;\r\n      y -= this.settings.main.paddingBot;\r\n      y -= this.horNumMarginBottom;\r\n  \r\n      // multiply line on proportional value\r\n      let value = this.settings.grid.yLabelsCount * horStep;\r\n      // and show it from biggest to lowest\r\n      value -= yLabelsArrIdx * horStep;\r\n  \r\n      curItem.y = y;\r\n      curItem.value = value;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<svg:g\\r\\n  app-chart-grid-xLines\\r\\n  [settings]=\\\"settings\\\"\\r\\n  [data]=\\\"data\\\"\\r\\n  [svg]=\\\"svg\\\"/>\\r\\n<svg:g\\r\\n  app-chart-grid-xLabels\\r\\n  [settings]=\\\"settings\\\"\\r\\n  [xData]=\\\"data.x\\\"/>\\r\\n<svg:g\\r\\n  app-chart-grid-yLabels\\r\\n  [yData]=\\\"data.y\\\"\\r\\n  [settings]=\\\"settings\\\"/>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0L2NoYXJ0LWdyaWQvY2hhcnQtZ3JpZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ChartSvg, Settings } from \"../chart.component\";\r\nimport { SortedData } from \"../../app.component\";\r\n\r\n@Component({\r\n  selector: '[app-chart-grid]',\r\n  templateUrl: './chart-grid.component.html',\r\n  styleUrls: ['./chart-grid.component.scss']\r\n})\r\nexport class ChartGridComponent implements OnInit {\r\n  @Input() data: SortedData;\r\n  @Input() settings: Settings;\r\n  @Input() svg: ChartSvg;\r\n\r\n\r\n  constructor() { }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \"<svg\\r\\n  [attr.viewBox]=\\\"viewBox\\\"\\r\\n  [attr.width]=\\\"svg.width\\\"\\r\\n  [attr.height]=\\\"svg.height\\\"\\r\\n  [attr.x]=\\\"0\\\"\\r\\n  [attr.y]=\\\"0\\\">\\r\\n  <g\\r\\n    app-chart-grid\\r\\n    [data]=\\\"data\\\"\\r\\n    [settings]=\\\"settings\\\"\\r\\n    [svg]=\\\"svg\\\"/>\\r\\n  <g\\r\\n    app-chart-polyline\\r\\n    [settings]=\\\"settings\\\"\\r\\n    [yData]=\\\"data.y\\\"\\r\\n    [svg]=\\\"svg\\\"\\r\\n    [visibleFrame]=\\\"visibleFrame\\\"/>\\r\\n</svg>\\r\\n\"","module.exports = \":host {\\n  display: block;\\n  overflow: hidden; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhcnQvY2hhcnQtbWFpbi9EOlxcUFJPSkVDVFNcXE1ZXFxUR0Mvc3JjXFxhcHBcXGNoYXJ0XFxjaGFydC1tYWluXFxjaGFydC1tYWluLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvY2hhcnQvY2hhcnQtbWFpbi9jaGFydC1tYWluLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuIl19 */\"","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { ChartSvg, Settings } from '../chart.component';\r\nimport { ChartEventsService, VisibleFrameObj } from '../chart-events.service';\r\nimport { SortedData } from '../../app.component';\r\n\r\n@Component({\r\n  selector: 'app-chart-main',\r\n  templateUrl: './chart-main.component.html',\r\n  styleUrls: ['./chart-main.component.scss']\r\n})\r\nexport class ChartMainComponent implements OnInit, OnDestroy {\r\n  @Input() data: SortedData;\r\n  @Input() settings: Settings;\r\n  \r\n\r\n  private visibleFrame: VisibleFrameObj;\r\n  private viewBox: string;\r\n  private svg: ChartSvg;\r\n  private sub1: Subscription;\r\n\r\n\r\n  constructor(private chartEventsService: ChartEventsService) {\r\n    this.sub1 = this.chartEventsService\r\n      .visibleFrame\r\n      .subscribe((visibleFrame: VisibleFrameObj) => {\r\n      // need to update whole object to fire ngOnChanges in child component\r\n      this.visibleFrame = {\r\n        from: visibleFrame.from,\r\n        to: visibleFrame.to\r\n      };\r\n    });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.svg = {\r\n      ...this.settings.main,\r\n      width: this.settings._width\r\n    };\r\n    this.viewBox = `0 0 ${this.svg.width} ${this.svg.height}`;\r\n  }\r\n  \r\n  ngOnDestroy() {\r\n    this.sub1.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"<svg:polyline\\r\\n  *ngFor=\\\"let polyline of polylineArr\\\"\\r\\n  [attr.points]=\\\"polyline.points\\\"\\r\\n  [attr.stroke]=\\\"polyline.stroke\\\"\\r\\n  [attr.data-name]=\\\"polyline.dataName\\\"\\r\\n  [attr.data-type]=\\\"polyline.dataType\\\"\\r\\n  [attr.stroke-width]=\\\"polyline.strokeWidth\\\"\\r\\n  [attr.visibility]=\\\"polyline.visibility\\\"\\r\\n  [attr.fill]=\\\"polyline.fill\\\"\\r\\n/>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0L2NoYXJ0LXBvbHlsaW5lL2NoYXJ0LXBvbHlsaW5lLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { ChartSvg, Settings } from '../chart.component';\r\nimport { ChartEventsService, TogglePolylineObj, VisibleFrameObj } from '../chart-events.service';\r\nimport { ChartMetaData, SortedY } from '../../app.component';\r\n\r\ninterface PolylineObj {\r\n  points: string[];\r\n  stroke: string;\r\n  dataName: string;\r\n  dataType: string;\r\n  strokeWidth: number;\r\n  visibility: string;\r\n  fill: string;\r\n}\r\n\r\n@Component({\r\n  selector: '[app-chart-polyline]',\r\n  templateUrl: './chart-polyline.component.html',\r\n  styleUrls: ['./chart-polyline.component.scss']\r\n})\r\nexport class ChartPolylineComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() yData: SortedY[];\r\n  @Input() settings: Settings;\r\n  @Input() visibleFrame: VisibleFrameObj;\r\n  @Input() svg: ChartSvg;\r\n  \r\n  private polylineArr: PolylineObj[];\r\n  private sub1: Subscription;\r\n  private sub2: Subscription;\r\n  \r\n  \r\n  constructor(private chartEventsService: ChartEventsService) {\r\n    this.sub1 = this.chartEventsService\r\n      .togglePolyline\r\n      .subscribe((polyline: TogglePolylineObj) => {\r\n        this.polylineArr[polyline.index].visibility = polyline.isVisible ? 'visible' : 'hidden';\r\n      });\r\n  \r\n  \r\n    this.sub2 = this.chartEventsService\r\n      .maxValHeight\r\n      .subscribe((maxValHeight: number) => {\r\n        if (this.settings && this.settings._maxValHeight) {\r\n          this.settings._maxValHeight = maxValHeight;\r\n        }\r\n      });\r\n  }\r\n  \r\n  \r\n  ngOnInit() {\r\n    this.polylineArr = this.buildPolyline();\r\n  }\r\n  \r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.polylineArr && this.polylineArr.length > 0) {\r\n      this.visibleFrame = changes.visibleFrame.currentValue;\r\n      this.updatePolyline();\r\n    }\r\n  }\r\n  \r\n  ngOnDestroy() {\r\n    this.sub1.unsubscribe();\r\n    this.sub2.unsubscribe();\r\n  }\r\n  \r\n  private buildPolyline(): PolylineObj[] {\r\n    const polylineArr: PolylineObj[] = [];\r\n    const yDataLen = this.yData.length;\r\n    for (let yDataIdx = 0; yDataIdx < yDataLen; yDataIdx++) {\r\n      const curData: SortedY = this.yData[yDataIdx];\r\n      const curDataArr: ChartMetaData = curData.data.slice(this.visibleFrame.from, this.visibleFrame.to);\r\n      const pointsArr: string[] = this.calcXY(curDataArr);\r\n  \r\n      polylineArr.push({\r\n        points: pointsArr,\r\n        stroke: curData.color,\r\n        dataName: curData.name,\r\n        dataType: curData.type,\r\n        strokeWidth: this.svg.polylineStrokeWidth,\r\n        visibility: 'visible',\r\n        fill: 'none'\r\n      });\r\n    }\r\n    \r\n    return polylineArr;\r\n  }\r\n  \r\n  private updatePolyline(): void {\r\n    const yDataLen = this.yData.length;\r\n    for (let yDataIdx = 0; yDataIdx < yDataLen; yDataIdx++) {\r\n      const curData: SortedY = this.yData[yDataIdx];\r\n      const curPolyline: PolylineObj = this.polylineArr[yDataIdx];\r\n      const curDataArr: ChartMetaData = curData.data.slice(this.visibleFrame.from, this.visibleFrame.to);\r\n  \r\n      curPolyline.points = this.calcXY(curDataArr);\r\n    }\r\n  }\r\n  \r\n  private calcXY(data: ChartMetaData): string[] {\r\n    const pointsArr = [];\r\n    const dataLength = data.length;\r\n    const paddingBot = this.svg.paddingBot ? this.svg.paddingBot : 0;\r\n    \r\n    for (let dataIndex = 0; dataIndex < dataLength; dataIndex++) {\r\n      let curItem = Number(data[dataIndex]);\r\n      const pointStepGap: number = this.settings._width / (dataLength - 1);\r\n      const xPoint = (pointStepGap * dataIndex).toFixed(4);\r\n      // get proportional val of Y point\r\n      let yPoint = curItem / this.settings._maxValHeight;\r\n      yPoint *= this.settings.main.height - paddingBot;\r\n      // turn over lines and add ver padding\r\n      yPoint = Number((this.settings.main.height - yPoint - paddingBot).toFixed(4));\r\n\r\n      // create lines array [x,y]\r\n      pointsArr.push(`${xPoint} ${yPoint}`);\r\n    }\r\n    \r\n    return pointsArr;\r\n  }\r\n}\r\n","module.exports = \"<svg:rect\\r\\n  *ngFor=\\\"let rect of rectArr\\\"\\r\\n  [attr.x]=\\\"rect.x\\\"\\r\\n  [attr.y]=\\\"rect.y\\\"\\r\\n  [attr.width]=\\\"rect.width\\\"\\r\\n  [attr.height]=\\\"rect.height\\\"\\r\\n  [attr.fill]=\\\"rect.fill\\\"\\r\\n  [attr.draggable]=\\\"rect.isDraggable ? true : null\\\"\\r\\n  [attr.data-rect-id]=\\\"rect.isDraggable ? rect.rectId : null\\\"\\r\\n  [style.cursor]=\\\"rect.isDraggable ? 'move' : 'initial'\\\"/>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0L2NoYXJ0LXRodW1iLWZyYW1lL2NoYXJ0LXRodW1iLWZyYW1lLmNvbXBvbmVudC5zY3NzIn0= */\"","import {\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnInit,\r\n} from '@angular/core';\r\n\r\nimport { Settings } from '../chart.component';\r\nimport { ChartEventsService, VisibleFrameObj } from '../chart-events.service';\r\n\r\nenum RectArr {\r\n  LR, // Left Rect\r\n  RR, // Right Rect\r\n  DR, // Draggable Rect\r\n  DLR, // Draggable Left Rect\r\n  DRR, // Draggable Right Rect\r\n}\r\n\r\ninterface RectObj {\r\n  rectId: RectArr;\r\n  isDraggable: boolean;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  fill: string;\r\n}\r\n\r\n@Component({\r\n  selector: '[app-chart-thumb-frame]',\r\n  templateUrl: './chart-thumb-frame.component.html',\r\n  styleUrls: ['./chart-thumb-frame.component.scss']\r\n})\r\nexport class ChartThumbFrameComponent implements OnInit {\r\n  @Input() settings: Settings;\r\n  @Input() visibleFrame: VisibleFrameObj;\r\n  \r\n  private rectArr: RectObj[] = [\r\n    {\r\n      rectId: RectArr.LR,\r\n      isDraggable: false,\r\n      x: null,\r\n      y: null,\r\n      width: null,\r\n      height: null,\r\n      fill: 'rgba(0, 191, 255, 0.05)'\r\n    },\r\n    {\r\n      rectId: RectArr.RR,\r\n      isDraggable: false,\r\n      x: null,\r\n      y: null,\r\n      width: null,\r\n      height: null,\r\n      fill: 'rgba(0, 191, 255, 0.05)'\r\n    },\r\n    {\r\n      rectId: RectArr.DR,\r\n      isDraggable: true,\r\n      x: null,\r\n      y: null,\r\n      width: null,\r\n      height: null,\r\n      fill: 'rgba(0, 0, 0, 0)'\r\n    },\r\n    {\r\n      rectId: RectArr.DLR,\r\n      isDraggable: true,\r\n      x: null,\r\n      y: null,\r\n      width: null,\r\n      height: null,\r\n      fill: 'rgba(0, 0, 0, 0.1)'\r\n    },\r\n    {\r\n      rectId: RectArr.DRR,\r\n      isDraggable: true,\r\n      x: null,\r\n      y: null,\r\n      width: null,\r\n      height: null,\r\n      fill: 'rgba(0, 0, 0, 0.1)'\r\n    }\r\n  ];\r\n  private dragEl;\r\n  \r\n  \r\n  constructor(private chartEventsService: ChartEventsService, private _el: ElementRef) {}\r\n  \r\n\r\n  ngOnInit() {\r\n    this.buildDraggableFrame();\r\n  }\r\n  \r\n  private buildDraggableFrame() {\r\n    // draggable border init width\r\n    const DBWidth = 14;\r\n    // draggable rect init width\r\n    const DRWidth = this.settings._width * this.settings._initRatioPercent;\r\n  \r\n    // create draggable frame overlay\r\n    const rectArrLen = this.rectArr.length;\r\n    for (let rectArrIdx = 0; rectArrIdx < rectArrLen; rectArrIdx++) {\r\n      let currRect = this.rectArr[rectArrIdx];\r\n      let initRectWidth = 0;\r\n      let initRectX = 0;\r\n  \r\n  \r\n      switch (rectArrIdx) {\r\n        case RectArr.LR :\r\n          initRectWidth = 0;\r\n          initRectX = 0;\r\n          break;\r\n        case RectArr.RR :\r\n          // right rect width = svg width - draggable rect width\r\n          initRectWidth = this.settings._width - DRWidth;\r\n          // right rect X = draggable rect width\r\n          initRectX = DRWidth;\r\n          break;\r\n        case RectArr.DR :\r\n          initRectWidth = DRWidth;\r\n          initRectX = 0;\r\n          break;\r\n        case RectArr.DLR :\r\n          initRectWidth = DBWidth;\r\n          initRectX = 0;\r\n          break;\r\n        case RectArr.DRR :\r\n          initRectWidth = DBWidth;\r\n          // draggable right border X = draggable rect width - draggable border width\r\n          initRectX = DRWidth - DBWidth;\r\n          break;\r\n      }\r\n    \r\n      \r\n      currRect.x = initRectX;\r\n      currRect.y = 0;\r\n      currRect.width = initRectWidth;\r\n      currRect.height = this.settings.main.height;\r\n    }\r\n  \r\n    this.loadDraggableFrameEvents();\r\n  }\r\n  \r\n  private loadDraggableFrameEvents() {\r\n    // add mouse/touch events\r\n    \r\n    this._el.nativeElement.addEventListener('mousedown', (event) => {\r\n      this.startDrag(event);\r\n    });\r\n    this._el.nativeElement.addEventListener('mousemove', (event) => {\r\n      this.onDrag(event);\r\n    });\r\n    this._el.nativeElement.addEventListener('mouseup', () => {\r\n      this.endDrag();\r\n    });\r\n    this._el.nativeElement.addEventListener('mouseleave', () => {\r\n      this.endDrag();\r\n    });\r\n    this._el.nativeElement.addEventListener('touchstart', (event) => {\r\n      this.startDrag(event);\r\n    });\r\n    this._el.nativeElement.addEventListener('touchmove', (event) => {\r\n      this.onDrag(event);\r\n    });\r\n    this._el.nativeElement.addEventListener('touchend', () => {\r\n      this.endDrag();\r\n    });\r\n    this._el.nativeElement.addEventListener('touchleave', () => {\r\n      this.endDrag();\r\n    });\r\n    this._el.nativeElement.addEventListener('touchcancel', () => {\r\n      this.endDrag();\r\n    });\r\n  }\r\n  \r\n  private startDrag(event) {\r\n    if (Boolean(event.target.getAttribute('draggable'))) {\r\n      event.preventDefault();\r\n      // set init values\r\n      this.dragEl = {\r\n        el: event.target,\r\n        x: event.target.x.baseVal.value,\r\n        width: event.target.width.baseVal.value,\r\n        offsetX: this.getMouseXPosition(event)\r\n      };\r\n    }\r\n  }\r\n  \r\n  private onDrag(event) {\r\n    if (this.dragEl && this.dragEl.el) {\r\n      event.preventDefault();\r\n      const rectId = Number(this.dragEl.el.getAttribute('data-rect-id'));\r\n  \r\n  \r\n      // get mouse/touch position\r\n      let clientX = this.getMouseXPosition(event);\r\n      // calculate drag position\r\n      const translateX = Math.floor(clientX - this.dragEl.offsetX);\r\n  \r\n  \r\n      this.rectArr[rectId].x = this.checkBorder(this.dragEl.x + translateX);\r\n  \r\n      \r\n      switch (rectId) {\r\n        case RectArr.DLR:\r\n        case RectArr.DRR:\r\n          // border drag\r\n          // move borders according to drag el\r\n          if (rectId === RectArr.DLR) {\r\n            this.rectArr[RectArr.DR].width = this.rectArr[RectArr.RR].x - this.rectArr[RectArr.DLR].x;\r\n            this.rectArr[RectArr.DR].x = this.rectArr[RectArr.DLR].x;\r\n    \r\n            // move sides according to drag el\r\n            this.rectArr[RectArr.LR].width = this.rectArr[RectArr.DR].x;\r\n          }\r\n          else if (rectId === RectArr.DRR) {\r\n            this.rectArr[RectArr.DR].width = this.rectArr[RectArr.DRR].x - this.rectArr[RectArr.DLR].x + this.rectArr[RectArr.DLR].width;\r\n    \r\n            // move sides according to drag el\r\n            this.rectArr[RectArr.RR].width = this.settings._width - this.rectArr[RectArr.DRR].x;\r\n            this.rectArr[RectArr.RR].x = this.rectArr[RectArr.DRR].x + this.rectArr[RectArr.DRR].width;\r\n          }\r\n          break;\r\n        case RectArr.DR:\r\n          // rect drag\r\n          // move sides according to drag el\r\n          this.rectArr[RectArr.LR].width = this.rectArr[RectArr.DR].x;\r\n  \r\n          this.rectArr[RectArr.RR].width = this.checkBorder(this.settings._width - (this.rectArr[RectArr.DR].x + this.rectArr[RectArr.DR].width));\r\n          this.rectArr[RectArr.RR].x = this.checkBorder(this.rectArr[RectArr.DR].x + this.rectArr[RectArr.DR].width);\r\n  \r\n  \r\n          // move borders according to drag el\r\n          this.rectArr[RectArr.DLR].x = this.rectArr[RectArr.DR].x;\r\n          this.rectArr[RectArr.DRR].x = this.rectArr[RectArr.RR].x - this.rectArr[RectArr.DRR].width;\r\n          break;\r\n      }\r\n  \r\n      \r\n      this.calcDragEvent();\r\n    }\r\n  }\r\n  \r\n  private endDrag() {\r\n    event.preventDefault();\r\n    // unbind from dragging\r\n    this.dragEl = null;\r\n  }\r\n  \r\n  private calcDragEvent() {\r\n    const from = Math.floor(this.settings._xLen * (this.rectArr[RectArr.DR].x / this.settings._width));\r\n    let to = Math.floor(this.settings._xLen * (this.rectArr[RectArr.DR].width / this.settings._width));\r\n    to += from;\r\n    \r\n    this.chartEventsService.visibleFrame.emit({from, to});\r\n  }\r\n  \r\n  private getMouseXPosition(event) {\r\n    // get parent SVG matrix\r\n    let CTM = this._el.nativeElement.parentNode.getScreenCTM();\r\n    if (event.touches) {\r\n      // override (e) if this is touch device\r\n      event = event.touches[0];\r\n    }\r\n    \r\n    // calculate X position\r\n    return (event.clientX - CTM.e) / CTM.a;\r\n  }\r\n  \r\n  private checkBorder(num) {\r\n    if (num <= 0) {\r\n      return 0;\r\n    }\r\n    else if (num >= this.settings._width) {\r\n      return this.settings._width;\r\n    }\r\n    else {\r\n      return num;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<svg\\r\\n  [attr.viewBox]=\\\"viewBox\\\"\\r\\n  [attr.width]=\\\"svg.width\\\"\\r\\n  [attr.height]=\\\"svg.height\\\"\\r\\n  [attr.x]=\\\"0\\\"\\r\\n  [attr.y]=\\\"0\\\"\\r\\n  [attr.preserveAspectRatio]=\\\"'none'\\\">\\r\\n  <g\\r\\n    app-chart-polyline\\r\\n    [settings]=\\\"settings\\\"\\r\\n    [yData]=\\\"data.y\\\"\\r\\n    [svg]=\\\"svg\\\"\\r\\n    [visibleFrame]=\\\"visibleFrame\\\"/>\\r\\n  <g\\r\\n    app-chart-thumb-frame\\r\\n    [settings]=\\\"settings\\\"\\r\\n    [visibleFrame]=\\\"visibleFrame\\\"/>\\r\\n</svg>\\r\\n\"","module.exports = \":host {\\n  display: block; }\\n  :host svg {\\n    width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhcnQvY2hhcnQtdGh1bWIvRDpcXFBST0pFQ1RTXFxNWVxcVEdDL3NyY1xcYXBwXFxjaGFydFxcY2hhcnQtdGh1bWJcXGNoYXJ0LXRodW1iLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYyxFQUFBO0VBRGhCO0lBSUksV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY2hhcnQvY2hhcnQtdGh1bWIvY2hhcnQtdGh1bWIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcblxyXG4gIHN2ZyB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbn1cclxuIl19 */\"","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { SortedData } from '../../app.component';\r\nimport { ChartSvg, Settings } from '../chart.component';\r\nimport { VisibleFrameObj } from '../chart-events.service';\r\n\r\n@Component({\r\n  selector: 'app-chart-thumb',\r\n  templateUrl: './chart-thumb.component.html',\r\n  styleUrls: ['./chart-thumb.component.scss']\r\n})\r\nexport class ChartThumbComponent implements OnInit {\r\n  @Input() data: SortedData;\r\n  @Input() settings: Settings;\r\n  \r\n  private visibleFrame: VisibleFrameObj;\r\n  private viewBox: string;\r\n  private svg: ChartSvg;\r\n  \r\n\r\n  constructor() {}\r\n\r\n\r\n  async ngOnInit() {\r\n    this.svg = {\r\n      ...this.settings.thumb,\r\n      width: this.settings._width\r\n    };\r\n    this.viewBox = `0 0 ${this.settings._width} ${this.settings.main.height}`;\r\n    this.visibleFrame = {\r\n      from: 0,\r\n      to: this.settings._xLen\r\n    };\r\n  }\r\n}\r\n","module.exports = \"<app-chart-main [data]=\\\"data\\\" [settings]=\\\"settings\\\"></app-chart-main>\\r\\n\\r\\n<app-chart-thumb [data]=\\\"data\\\" [settings]=\\\"settings\\\"></app-chart-thumb>\\r\\n\\r\\n<app-chart-buttons [data]=\\\"data\\\" [settings]=\\\"settings\\\"></app-chart-buttons>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0L2NoYXJ0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { SortedData, SortedY } from '../app.component';\r\nimport { ChartEventsService, VisibleFrameObj } from './chart-events.service';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\nexport interface Settings {\r\n  // chart width\r\n  _width: number;\r\n  // max data value\r\n  _maxValHeight: number;\r\n  // x data length\r\n  _xLen: number;\r\n  // init ratio percent. for points gap and frame width\r\n  _initRatioPercent: number;\r\n  \r\n  // main chart\r\n  main: {\r\n    height: number;\r\n    // stroke width of polyline\r\n    polylineStrokeWidth: number;\r\n    // vertical padding\r\n    paddingBot: number;\r\n  };\r\n  // thumb chart\r\n  thumb: {\r\n    height: number;\r\n    // stroke width of polyline\r\n    polylineStrokeWidth: number;\r\n  };\r\n  \r\n  grid: {\r\n    // horizontal lines\r\n    xLinesThickness: number;\r\n    // horizontal labels on the data\r\n    yLabelsCount: number;\r\n    // font size for x/y labels\r\n    fontSize: number;\r\n  }\r\n}\r\n\r\nexport interface ChartSvg {\r\n  width: number;\r\n  height: number;\r\n  polylineStrokeWidth: number;\r\n  paddingBot?: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-chart',\r\n  templateUrl: './chart.component.html',\r\n  styleUrls: ['./chart.component.scss'],\r\n  providers: [ChartEventsService]\r\n})\r\nexport class ChartComponent implements OnInit {\r\n  @Input() data: SortedData;\r\n  settings: Settings = {\r\n    // chart width will be 6 times bigger then screen\r\n    _width: window.innerWidth,\r\n    _maxValHeight: null,\r\n    _xLen: null,\r\n    _initRatioPercent: 0.2,\r\n    \r\n    main: {\r\n      height: 500,\r\n      polylineStrokeWidth: 2,\r\n      paddingBot: 40\r\n    },\r\n    thumb: {\r\n      height: 100,\r\n      polylineStrokeWidth: 1,\r\n    },\r\n    grid: {\r\n      xLinesThickness: 1,\r\n      yLabelsCount: 6,\r\n      fontSize: 14\r\n    }\r\n  };\r\n  \r\n  \r\n  static roundUpVal(val: number): number {\r\n    // round up maxVal\r\n    val = Math.ceil(val);\r\n    return (Number(val.toString().slice(0,1)) + 1) // get first num + 1 of max val\r\n      *\r\n      Number(`1e${val.toString().length - 1}`); // 1e5 = 100000. get max val in tens/hundreds/thousands format\r\n    \r\n  }\r\n  \r\n  static calcMaxValues(yData: SortedY[]) {\r\n    let maxValHeight = 0;\r\n    for (let yDataIndex = 0; yDataIndex < yData.length; yDataIndex++) {\r\n      const curyData = yData[yDataIndex];\r\n      maxValHeight = maxValHeight < Math.max(...curyData.data) ? Math.max(...curyData.data) : maxValHeight;\r\n    }\r\n    \r\n    // round up maxVal\r\n    return ChartComponent.roundUpVal(maxValHeight);\r\n  }\r\n  \r\n  \r\n  constructor(private chartEventsService: ChartEventsService) {}\r\n  \r\n  \r\n  ngOnInit() {\r\n    this.settings._xLen = this.data.x.data.length - 1;\r\n    this.settings._maxValHeight = ChartComponent.calcMaxValues(this.data.y);\r\n    this.settings.main.height += this.settings.main.paddingBot;\r\n    \r\n    this.chartEventsService.visibleFrame.emit({\r\n      from: 0,\r\n      // init visible frame will be 20% of chart length\r\n      to: Math.floor(this.settings._xLen * this.settings._initRatioPercent)\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}